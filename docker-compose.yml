#version: "3"
#
#services:
#  node:
#    build: ./backend
#    depends_on:
#      - sql
#    env_file:
#     # Make sure to update this to match your project.
#      - ./personal-website.env
#    environment:
#      - MYSQL_HOST=sql
#    ports:
#      - 8080:4200
#    volumes:
#      - ./backend:/home/node/app
#  app:
#    build: ./frontend
#    depends_on:
#      - node
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
#      - ./frontend/public:/usr/share/nginx/html
#      - ./dh-param/dhparam-2048.pem:/etc/ssl/certs/dhparam-2048.pem
#      - /docker-volumes/personal-website/etc/letsencrypt/live/kylemayer.com/fullchain.pem:/etc/letsencrypt/live/kylemayer.com/fullchain.pem
#      - /docker-volumes/personal-website/etc/letsencrypt/live/kylemayer.com/privkey.pem:/etc/letsencrypt/live/kylemayer.com/privkey.pem
#  sql:
#    build: ./sql
#    # Make sure to update this to match your project.
#    env_file:
#     - ./personal-website.env
#    command: --default-authentication-plugin=mysql_native_password
#    ports:
#      - 33006:3306

version: "3"

services:
   node:
     build: ./backend
     depends_on:
       - sql
     env_file:
       # Make sure to update this to match your project.
       - ./personal-website.env
     environment:
       - MYSQL_HOST=sql
     ports:
       - 8080:4200
     volumes:
       - ./backend/src:/home/node/app/src
       - ./backend/tsconfig.json:/home/node/app/tsconfig.json
   app:
    build: ./frontend
    depends_on:
      - node
#    For deploying to server use ports: - 80:80
    ports:
      - 80:80
   sql:
     build: ./sql
   # Make sure to update this to match your project.
     env_file:
     - ./personal-website.env
     command: --default-authentication-plugin=mysql_native_password
     volumes:
       - /var/lib/mysql
     ports:
       - 33006:3306


